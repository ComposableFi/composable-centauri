// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: composable/ibctransfermiddleware/v1beta1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
type MsgUpdateCustomIbcParams struct {
	// authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// params defines the x/ibctransfermiddleware parameters to update.
	//
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateCustomIbcParams) Reset()         { *m = MsgUpdateCustomIbcParams{} }
func (m *MsgUpdateCustomIbcParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateCustomIbcParams) ProtoMessage()    {}
func (*MsgUpdateCustomIbcParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf5c053de6965bca, []int{0}
}
func (m *MsgUpdateCustomIbcParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateCustomIbcParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateCustomIbcParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateCustomIbcParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateCustomIbcParams.Merge(m, src)
}
func (m *MsgUpdateCustomIbcParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateCustomIbcParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateCustomIbcParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateCustomIbcParams proto.InternalMessageInfo

func (m *MsgUpdateCustomIbcParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateCustomIbcParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
type MsgUpdateParamsCustomIbcResponse struct {
}

func (m *MsgUpdateParamsCustomIbcResponse) Reset()         { *m = MsgUpdateParamsCustomIbcResponse{} }
func (m *MsgUpdateParamsCustomIbcResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsCustomIbcResponse) ProtoMessage()    {}
func (*MsgUpdateParamsCustomIbcResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf5c053de6965bca, []int{1}
}
func (m *MsgUpdateParamsCustomIbcResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsCustomIbcResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsCustomIbcResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsCustomIbcResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsCustomIbcResponse.Merge(m, src)
}
func (m *MsgUpdateParamsCustomIbcResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsCustomIbcResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsCustomIbcResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsCustomIbcResponse proto.InternalMessageInfo

// MsgAddParachainInfo represents a message to add new parachain info.
type MsgAddIBCFeeConfig struct {
	// authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority           string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty" yaml:"authority"`
	ChannelID           string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty" yaml:"channel_id"`
	FeeAddress          string `protobuf:"bytes,3,opt,name=fee_address,json=feeAddress,proto3" json:"fee_address,omitempty" yaml:"rly_address"`
	MinTimeoutTimestamp int64  `protobuf:"varint,4,opt,name=min_timeout_timestamp,json=minTimeoutTimestamp,proto3" json:"min_timeout_timestamp,omitempty"`
}

func (m *MsgAddIBCFeeConfig) Reset()         { *m = MsgAddIBCFeeConfig{} }
func (m *MsgAddIBCFeeConfig) String() string { return proto.CompactTextString(m) }
func (*MsgAddIBCFeeConfig) ProtoMessage()    {}
func (*MsgAddIBCFeeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf5c053de6965bca, []int{2}
}
func (m *MsgAddIBCFeeConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddIBCFeeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddIBCFeeConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddIBCFeeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddIBCFeeConfig.Merge(m, src)
}
func (m *MsgAddIBCFeeConfig) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddIBCFeeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddIBCFeeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddIBCFeeConfig proto.InternalMessageInfo

func (m *MsgAddIBCFeeConfig) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgAddIBCFeeConfig) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

func (m *MsgAddIBCFeeConfig) GetFeeAddress() string {
	if m != nil {
		return m.FeeAddress
	}
	return ""
}

func (m *MsgAddIBCFeeConfig) GetMinTimeoutTimestamp() int64 {
	if m != nil {
		return m.MinTimeoutTimestamp
	}
	return 0
}

type MsgAddIBCFeeConfigResponse struct {
}

func (m *MsgAddIBCFeeConfigResponse) Reset()         { *m = MsgAddIBCFeeConfigResponse{} }
func (m *MsgAddIBCFeeConfigResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddIBCFeeConfigResponse) ProtoMessage()    {}
func (*MsgAddIBCFeeConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf5c053de6965bca, []int{3}
}
func (m *MsgAddIBCFeeConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddIBCFeeConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddIBCFeeConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddIBCFeeConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddIBCFeeConfigResponse.Merge(m, src)
}
func (m *MsgAddIBCFeeConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddIBCFeeConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddIBCFeeConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddIBCFeeConfigResponse proto.InternalMessageInfo

// MsgRemoveParachainIBCTokenInfo represents a message to remove new parachain
// info.
type MsgRemoveIBCFeeConfig struct {
	// authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty" yaml:"authority"`
	ChannelID string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty" yaml:"channel_id"`
}

func (m *MsgRemoveIBCFeeConfig) Reset()         { *m = MsgRemoveIBCFeeConfig{} }
func (m *MsgRemoveIBCFeeConfig) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveIBCFeeConfig) ProtoMessage()    {}
func (*MsgRemoveIBCFeeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf5c053de6965bca, []int{4}
}
func (m *MsgRemoveIBCFeeConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveIBCFeeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveIBCFeeConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveIBCFeeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveIBCFeeConfig.Merge(m, src)
}
func (m *MsgRemoveIBCFeeConfig) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveIBCFeeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveIBCFeeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveIBCFeeConfig proto.InternalMessageInfo

func (m *MsgRemoveIBCFeeConfig) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgRemoveIBCFeeConfig) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

type MsgRemoveIBCFeeConfigResponse struct {
}

func (m *MsgRemoveIBCFeeConfigResponse) Reset()         { *m = MsgRemoveIBCFeeConfigResponse{} }
func (m *MsgRemoveIBCFeeConfigResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveIBCFeeConfigResponse) ProtoMessage()    {}
func (*MsgRemoveIBCFeeConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf5c053de6965bca, []int{5}
}
func (m *MsgRemoveIBCFeeConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveIBCFeeConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveIBCFeeConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveIBCFeeConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveIBCFeeConfigResponse.Merge(m, src)
}
func (m *MsgRemoveIBCFeeConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveIBCFeeConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveIBCFeeConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveIBCFeeConfigResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateCustomIbcParams)(nil), "composable.ibctransfermiddleware.v1beta1.MsgUpdateCustomIbcParams")
	proto.RegisterType((*MsgUpdateParamsCustomIbcResponse)(nil), "composable.ibctransfermiddleware.v1beta1.MsgUpdateParamsCustomIbcResponse")
	proto.RegisterType((*MsgAddIBCFeeConfig)(nil), "composable.ibctransfermiddleware.v1beta1.MsgAddIBCFeeConfig")
	proto.RegisterType((*MsgAddIBCFeeConfigResponse)(nil), "composable.ibctransfermiddleware.v1beta1.MsgAddIBCFeeConfigResponse")
	proto.RegisterType((*MsgRemoveIBCFeeConfig)(nil), "composable.ibctransfermiddleware.v1beta1.MsgRemoveIBCFeeConfig")
	proto.RegisterType((*MsgRemoveIBCFeeConfigResponse)(nil), "composable.ibctransfermiddleware.v1beta1.MsgRemoveIBCFeeConfigResponse")
}

func init() {
	proto.RegisterFile("composable/ibctransfermiddleware/v1beta1/tx.proto", fileDescriptor_bf5c053de6965bca)
}

var fileDescriptor_bf5c053de6965bca = []byte{
	// 600 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x94, 0xcf, 0x6b, 0x13, 0x41,
	0x14, 0xc7, 0x33, 0x8d, 0x16, 0x76, 0x0a, 0x6a, 0xd7, 0x56, 0xd7, 0xc5, 0xee, 0x86, 0x3d, 0x85,
	0x82, 0x59, 0x13, 0xc1, 0x42, 0x10, 0x24, 0x9b, 0xa8, 0x44, 0x08, 0xc8, 0xb6, 0x5e, 0xbc, 0x84,
	0x49, 0x76, 0xb2, 0x5d, 0xc8, 0xec, 0x2c, 0x3b, 0x93, 0xd8, 0xdc, 0xc4, 0x93, 0x78, 0xf2, 0xe2,
	0xb5, 0x57, 0x3d, 0xe6, 0xe0, 0x1f, 0xd1, 0x63, 0xf1, 0xe4, 0x29, 0x48, 0x72, 0xc8, 0x4d, 0x21,
	0x7f, 0x81, 0x64, 0x67, 0x93, 0xd4, 0xfc, 0x80, 0xd4, 0x5e, 0xbc, 0x64, 0x67, 0xde, 0x9b, 0xf7,
	0x99, 0xef, 0x7c, 0xf3, 0x66, 0x60, 0xb6, 0x4e, 0x49, 0x40, 0x19, 0xaa, 0x35, 0xb1, 0xe9, 0xd5,
	0xea, 0x3c, 0x44, 0x3e, 0x6b, 0xe0, 0x90, 0x78, 0x8e, 0xd3, 0xc4, 0x6f, 0x51, 0x88, 0xcd, 0x76,
	0xb6, 0x86, 0x39, 0xca, 0x9a, 0xfc, 0x24, 0x13, 0x84, 0x94, 0x53, 0x39, 0x3d, 0x2b, 0xc9, 0x2c,
	0x2d, 0xc9, 0xc4, 0x25, 0xea, 0xdd, 0x3a, 0x65, 0x84, 0x32, 0x93, 0x30, 0xd7, 0x6c, 0x67, 0xc7,
	0x1f, 0x81, 0x50, 0xb7, 0x11, 0xf1, 0x7c, 0x6a, 0x46, 0xbf, 0x71, 0x68, 0xc7, 0xa5, 0x2e, 0x8d,
	0x86, 0xe6, 0x78, 0x14, 0x47, 0xef, 0x09, 0x42, 0x55, 0x24, 0xc4, 0x24, 0x4e, 0x95, 0xd6, 0x56,
	0xbe, 0x5c, 0x64, 0x44, 0x31, 0x7e, 0x01, 0xa8, 0x54, 0x98, 0xfb, 0x3a, 0x70, 0x10, 0xc7, 0xc5,
	0x16, 0xe3, 0x94, 0x94, 0x6b, 0xf5, 0x57, 0x28, 0x44, 0x84, 0xc9, 0x8f, 0xa1, 0x84, 0x5a, 0xfc,
	0x98, 0x86, 0x1e, 0xef, 0x28, 0x20, 0x05, 0xd2, 0x92, 0xa5, 0x7c, 0xff, 0xf6, 0x60, 0x27, 0xd6,
	0x51, 0x70, 0x9c, 0x10, 0x33, 0x76, 0xc8, 0x43, 0xcf, 0x77, 0xed, 0xd9, 0x52, 0xf9, 0x10, 0x6e,
	0x06, 0x11, 0x41, 0xd9, 0x48, 0x81, 0xf4, 0x56, 0xee, 0x61, 0x66, 0x5d, 0xcb, 0x32, 0x62, 0x67,
	0x4b, 0x3a, 0xeb, 0xe9, 0x89, 0xaf, 0xc3, 0xee, 0x3e, 0xb0, 0x63, 0x54, 0xfe, 0xd9, 0xfb, 0x61,
	0x77, 0x7f, 0xb6, 0xc9, 0xc7, 0x61, 0x77, 0x3f, 0x77, 0xc1, 0x82, 0x93, 0x15, 0x26, 0x4c, 0x0f,
	0x27, 0xc8, 0x86, 0x01, 0x53, 0x73, 0xa1, 0xe9, 0xa9, 0x6d, 0xcc, 0x02, 0xea, 0x33, 0x6c, 0x7c,
	0xd8, 0x80, 0x72, 0x85, 0xb9, 0x05, 0xc7, 0x29, 0x5b, 0xc5, 0xe7, 0x18, 0x17, 0xa9, 0xdf, 0xf0,
	0x5c, 0x39, 0xb7, 0x68, 0xc7, 0xce, 0xa8, 0xa7, 0xdf, 0xea, 0x20, 0xd2, 0xcc, 0x1b, 0xd3, 0x94,
	0x71, 0xd1, 0x8a, 0x02, 0x84, 0xf5, 0x63, 0xe4, 0xfb, 0xb8, 0x59, 0xf5, 0x9c, 0xc8, 0x0e, 0xc9,
	0x32, 0xfa, 0x3d, 0x5d, 0x2a, 0x8a, 0x68, 0xb9, 0x34, 0xea, 0xe9, 0xdb, 0x82, 0x30, 0x5b, 0x68,
	0xd8, 0x52, 0x3c, 0x29, 0x3b, 0xf2, 0x01, 0xdc, 0x6a, 0x60, 0x5c, 0x45, 0xc2, 0x6d, 0x25, 0x19,
	0x31, 0xee, 0x8c, 0x7a, 0xba, 0x2c, 0xca, 0xc2, 0x66, 0x67, 0x92, 0x34, 0x6c, 0xd8, 0xc0, 0x38,
	0xfe, 0x5f, 0xe4, 0x1c, 0xdc, 0x25, 0x9e, 0x5f, 0xe5, 0x1e, 0xc1, 0xb4, 0xc5, 0xa3, 0x2f, 0xe3,
	0x88, 0x04, 0xca, 0xb5, 0x14, 0x48, 0x27, 0xed, 0xdb, 0xc4, 0xf3, 0x8f, 0x44, 0xee, 0x68, 0x92,
	0xca, 0xdf, 0xf8, 0xdb, 0x65, 0xe3, 0x3e, 0x54, 0x17, 0x9d, 0x98, 0x1a, 0x75, 0x0a, 0xe0, 0x6e,
	0x85, 0xb9, 0x36, 0x26, 0xb4, 0x8d, 0xff, 0x03, 0xaf, 0x16, 0xe4, 0xeb, 0x70, 0x6f, 0xa9, 0xbe,
	0xc9, 0x09, 0x72, 0xbf, 0x93, 0x30, 0x59, 0x61, 0xae, 0xfc, 0x05, 0xc0, 0xdd, 0xe5, 0x97, 0xc0,
	0x5a, 0xbf, 0x79, 0x57, 0x5d, 0x24, 0xf5, 0xe5, 0x3f, 0x30, 0x56, 0x34, 0xa7, 0xfc, 0x19, 0xc0,
	0x9b, 0xf3, 0x9d, 0xf9, 0xe4, 0x52, 0xfc, 0xb9, 0x6a, 0xb5, 0x74, 0x95, 0xea, 0xa9, 0xae, 0x53,
	0x00, 0xe5, 0x25, 0x8d, 0xf0, 0xf4, 0x52, 0xf0, 0x45, 0x80, 0xfa, 0xe2, 0x8a, 0x80, 0x89, 0x40,
	0xf5, 0xfa, 0xbb, 0xf1, 0x7b, 0x62, 0x1d, 0x9c, 0xf5, 0x35, 0x70, 0xde, 0xd7, 0xc0, 0xcf, 0xbe,
	0x06, 0x3e, 0x0d, 0xb4, 0xc4, 0xf9, 0x40, 0x4b, 0xfc, 0x18, 0x68, 0x89, 0x37, 0x7b, 0xab, 0xde,
	0x10, 0xde, 0x09, 0x30, 0xab, 0x6d, 0x46, 0x2f, 0xe6, 0xa3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x6c, 0xfd, 0xab, 0xe5, 0x33, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	UpdateCustomIbcParams(ctx context.Context, in *MsgUpdateCustomIbcParams, opts ...grpc.CallOption) (*MsgUpdateParamsCustomIbcResponse, error)
	AddIBCFeeConfig(ctx context.Context, in *MsgAddIBCFeeConfig, opts ...grpc.CallOption) (*MsgAddIBCFeeConfigResponse, error)
	RemoveIBCFeeConfig(ctx context.Context, in *MsgRemoveIBCFeeConfig, opts ...grpc.CallOption) (*MsgRemoveIBCFeeConfigResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateCustomIbcParams(ctx context.Context, in *MsgUpdateCustomIbcParams, opts ...grpc.CallOption) (*MsgUpdateParamsCustomIbcResponse, error) {
	out := new(MsgUpdateParamsCustomIbcResponse)
	err := c.cc.Invoke(ctx, "/composable.ibctransfermiddleware.v1beta1.Msg/UpdateCustomIbcParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddIBCFeeConfig(ctx context.Context, in *MsgAddIBCFeeConfig, opts ...grpc.CallOption) (*MsgAddIBCFeeConfigResponse, error) {
	out := new(MsgAddIBCFeeConfigResponse)
	err := c.cc.Invoke(ctx, "/composable.ibctransfermiddleware.v1beta1.Msg/AddIBCFeeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveIBCFeeConfig(ctx context.Context, in *MsgRemoveIBCFeeConfig, opts ...grpc.CallOption) (*MsgRemoveIBCFeeConfigResponse, error) {
	out := new(MsgRemoveIBCFeeConfigResponse)
	err := c.cc.Invoke(ctx, "/composable.ibctransfermiddleware.v1beta1.Msg/RemoveIBCFeeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	UpdateCustomIbcParams(context.Context, *MsgUpdateCustomIbcParams) (*MsgUpdateParamsCustomIbcResponse, error)
	AddIBCFeeConfig(context.Context, *MsgAddIBCFeeConfig) (*MsgAddIBCFeeConfigResponse, error)
	RemoveIBCFeeConfig(context.Context, *MsgRemoveIBCFeeConfig) (*MsgRemoveIBCFeeConfigResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateCustomIbcParams(ctx context.Context, req *MsgUpdateCustomIbcParams) (*MsgUpdateParamsCustomIbcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCustomIbcParams not implemented")
}
func (*UnimplementedMsgServer) AddIBCFeeConfig(ctx context.Context, req *MsgAddIBCFeeConfig) (*MsgAddIBCFeeConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddIBCFeeConfig not implemented")
}
func (*UnimplementedMsgServer) RemoveIBCFeeConfig(ctx context.Context, req *MsgRemoveIBCFeeConfig) (*MsgRemoveIBCFeeConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveIBCFeeConfig not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateCustomIbcParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateCustomIbcParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateCustomIbcParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/composable.ibctransfermiddleware.v1beta1.Msg/UpdateCustomIbcParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateCustomIbcParams(ctx, req.(*MsgUpdateCustomIbcParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddIBCFeeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddIBCFeeConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddIBCFeeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/composable.ibctransfermiddleware.v1beta1.Msg/AddIBCFeeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddIBCFeeConfig(ctx, req.(*MsgAddIBCFeeConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveIBCFeeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveIBCFeeConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveIBCFeeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/composable.ibctransfermiddleware.v1beta1.Msg/RemoveIBCFeeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveIBCFeeConfig(ctx, req.(*MsgRemoveIBCFeeConfig))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "composable.ibctransfermiddleware.v1beta1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateCustomIbcParams",
			Handler:    _Msg_UpdateCustomIbcParams_Handler,
		},
		{
			MethodName: "AddIBCFeeConfig",
			Handler:    _Msg_AddIBCFeeConfig_Handler,
		},
		{
			MethodName: "RemoveIBCFeeConfig",
			Handler:    _Msg_RemoveIBCFeeConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "composable/ibctransfermiddleware/v1beta1/tx.proto",
}

func (m *MsgUpdateCustomIbcParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateCustomIbcParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateCustomIbcParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsCustomIbcResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsCustomIbcResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsCustomIbcResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddIBCFeeConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddIBCFeeConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddIBCFeeConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MinTimeoutTimestamp != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MinTimeoutTimestamp))
		i--
		dAtA[i] = 0x20
	}
	if len(m.FeeAddress) > 0 {
		i -= len(m.FeeAddress)
		copy(dAtA[i:], m.FeeAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FeeAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ChannelID) > 0 {
		i -= len(m.ChannelID)
		copy(dAtA[i:], m.ChannelID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChannelID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddIBCFeeConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddIBCFeeConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddIBCFeeConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveIBCFeeConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveIBCFeeConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveIBCFeeConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ChannelID) > 0 {
		i -= len(m.ChannelID)
		copy(dAtA[i:], m.ChannelID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChannelID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveIBCFeeConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveIBCFeeConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveIBCFeeConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateCustomIbcParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsCustomIbcResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddIBCFeeConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ChannelID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.FeeAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MinTimeoutTimestamp != 0 {
		n += 1 + sovTx(uint64(m.MinTimeoutTimestamp))
	}
	return n
}

func (m *MsgAddIBCFeeConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveIBCFeeConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ChannelID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveIBCFeeConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateCustomIbcParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateCustomIbcParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateCustomIbcParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsCustomIbcResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsCustomIbcResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsCustomIbcResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddIBCFeeConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddIBCFeeConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddIBCFeeConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChannelID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChannelID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeeAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeeAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinTimeoutTimestamp", wireType)
			}
			m.MinTimeoutTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinTimeoutTimestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddIBCFeeConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddIBCFeeConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddIBCFeeConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveIBCFeeConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveIBCFeeConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveIBCFeeConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChannelID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChannelID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveIBCFeeConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveIBCFeeConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveIBCFeeConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
