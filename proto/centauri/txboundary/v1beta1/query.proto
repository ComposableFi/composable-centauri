syntax = "proto3";
package centauri.txboundary.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "centauri/txboundary/v1beta1/boundary.proto";

option go_package = "x/tx-boundary/types";

// Query provides defines the gRPC querier service.
service Query {
  // DelegateBoundary returns the  boundary for the delegate tx.
  rpc DelegateBoundary(QueryDelegateBoundaryRequest) returns (QueryDelegateBoundaryResponse) {
    option (google.api.http).get = "/cosmos/txboundary/v1beta1/delegateboundary";
  }

  // RedelegateBoundary returns the  boundary for the redelegate tx.
  rpc RedelegateBoundary(QueryRedelegateBoundaryRequest) returns (QueryRedelegateBoundaryResponse) {
    option (google.api.http).get = "/cosmos/txboundary/v1beta1/redelegateboundary";
  }
}

// QueryDelegateBoundaryRequest is the request type for the Query/DelegateBoundary RPC method.
message QueryDelegateBoundaryRequest {}

// QueryDelegateBoundaryResponse is the response type for the Query/DelegateBoundary RPC method.
message QueryDelegateBoundaryResponse {
  // boundary defines the boundary for the delegate tx
  Boundary boundary = 1 [ (gogoproto.nullable) = false ];
}

// QueryRedelegateBoundaryRequest is the request type for the Query/ReDelegateBoundary RPC method.
message QueryRedelegateBoundaryRequest {}

// QueryRedelegateBoundaryResponse is the response type for the Query/ReDelegateBoundary RPC
// method.
message QueryRedelegateBoundaryResponse {
  // boundary defines the boundary for the redelegate tx
  Boundary boundary = 1 [ (gogoproto.nullable) = false ];
}
