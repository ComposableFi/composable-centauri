syntax = "proto3";
package composable.keyrotation.v1beta1;

import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/any.proto";

option go_package = "x/keyrotation/types";

// Msg defines the x/keyrotation Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  // CreateValidator defines a method for creating a new validator.
  rpc RotateConsPubKey(MsgRotateConsPubKey) returns (MsgRotateConsPubKeyResponse);
}

message MsgRotateConsPubKey {
  string validator_address = 1;
  google.protobuf.Any pubkey = 2 [(cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
}

message MsgRotateConsPubKeyResponse {
}